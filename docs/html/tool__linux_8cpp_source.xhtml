<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.13"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>Network Traffic Capture With Application Tags: src/tool_linux.cpp Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/javascript">
  $(document).ready(function() { init_search(); });
</script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">Network Traffic Capture With Application Tags
   </div>
   <div id="projectbrief">Bachelor&#39;s Thesis, FIT VUT</div>
  </td>
   <td>        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.png" alt=""/></a>
          </span>
        </div>
</td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.13 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
$(document).ready(function(){initNavTree('tool__linux_8cpp_source.xhtml','');});
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="headertitle">
<div class="title">tool_linux.cpp</div>  </div>
</div><!--header-->
<div class="contents">
<a href="tool__linux_8cpp.xhtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;</div><div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;<span class="preprocessor">#include &lt;fstream&gt;</span>              <span class="comment">//  ifstream</span></div><div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;<span class="preprocessor">#include &lt;dirent.h&gt;</span>             <span class="comment">//  opendir(), readdir()</span></div><div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;<span class="preprocessor">#include &lt;unistd.h&gt;</span>             <span class="comment">//  getpid()</span></div><div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;<span class="preprocessor">#include &lt;cstring&gt;</span>              <span class="comment">//  memset(), strchr()</span></div><div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;</div><div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="tcpip__headers_8hpp.xhtml">tcpip_headers.hpp</a>&quot;</span>    <span class="comment">//</span></div><div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="netflow_8hpp.xhtml">netflow.hpp</a>&quot;</span>          <span class="comment">//  Netflow</span></div><div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="cache_8hpp.xhtml">cache.hpp</a>&quot;</span>            <span class="comment">//  Cache, TEntry</span></div><div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="debug_8hpp.xhtml">debug.hpp</a>&quot;</span>            <span class="comment">//  log()</span></div><div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="utils_8hpp.xhtml">utils.hpp</a>&quot;</span>            <span class="comment">//  pidToInt()</span></div><div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="tool__linux_8hpp.xhtml">tool_linux.hpp</a>&quot;</span></div><div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;</div><div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;<span class="keyword">using namespace </span><a class="code" href="namespacestd.xhtml">std</a>;</div><div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;</div><div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;<span class="keyword">extern</span> <span class="keyword">const</span> <span class="keywordtype">char</span> *<a class="code" href="tool__linux_8cpp.xhtml#a66c99b5dfab9066869a377e3a4f8cc7f">g_dev</a>;</div><div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;<span class="keyword">extern</span> <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> <a class="code" href="tool__linux_8cpp.xhtml#a6fcedd7165126a470d02412573dea7c3">g_notFoundApps</a>;</div><div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;<span class="keyword">extern</span> <a class="code" href="struct_t_o_o_l_1_1mac__addr.xhtml">TOOL::mac_addr</a> <a class="code" href="tool__linux_8cpp.xhtml#a2a4595f71a05150f24c3e71423309414">g_devMac</a>;</div><div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;</div><div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;</div><div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;</div><div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;</div><div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;<span class="keyword">namespace </span><a class="code" href="namespace_t_o_o_l.xhtml">TOOL</a></div><div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;{</div><div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;</div><div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;</div><div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;<span class="keywordtype">int</span> <a class="code" href="tool__apple_8cpp.xhtml#abffa8d5a00da5ef52e025864e1b86829">setDevMac</a>()</div><div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;{</div><div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;    <span class="keywordtype">string</span> ifname;</div><div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;    <span class="keywordflow">if</span> (strncmp(<a class="code" href="tool__linux_8cpp.xhtml#a66c99b5dfab9066869a377e3a4f8cc7f">g_dev</a>, <span class="stringliteral">&quot;netmap:&quot;</span>, 7) == 0)</div><div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;    {</div><div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;        <span class="keyword">const</span> <span class="keywordtype">char</span>* tmpPtr = &amp;<a class="code" href="tool__linux_8cpp.xhtml#a66c99b5dfab9066869a377e3a4f8cc7f">g_dev</a>[7];</div><div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;        <span class="comment">// scan for a separator</span></div><div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;        <span class="keywordflow">for</span> ( ; *tmpPtr &amp;&amp; !index(<span class="stringliteral">&quot;-*^{}/@&quot;</span>, *tmpPtr); tmpPtr++)</div><div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;            ;</div><div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;</div><div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;        ifname = &amp;<a class="code" href="tool__linux_8cpp.xhtml#a66c99b5dfab9066869a377e3a4f8cc7f">g_dev</a>[7];</div><div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;        ifname.erase(tmpPtr - &amp;<a class="code" href="tool__linux_8cpp.xhtml#a66c99b5dfab9066869a377e3a4f8cc7f">g_dev</a>[7]);</div><div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;    }</div><div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;    <span class="keywordflow">else</span> <span class="keywordflow">if</span> (strncmp(<a class="code" href="tool__linux_8cpp.xhtml#a66c99b5dfab9066869a377e3a4f8cc7f">g_dev</a>, <span class="stringliteral">&quot;pfq:&quot;</span>, 4) == 0)</div><div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;        ifname = &amp;<a class="code" href="tool__linux_8cpp.xhtml#a66c99b5dfab9066869a377e3a4f8cc7f">g_dev</a>[4];</div><div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;    <span class="keywordflow">else</span> </div><div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;        ifname = <a class="code" href="tool__linux_8cpp.xhtml#a66c99b5dfab9066869a377e3a4f8cc7f">g_dev</a>;</div><div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160; </div><div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;    <span class="comment">// it&#39;s 2B type, so &gt;&gt; will read 2 hexa chars, which is 1 normal Byte</span></div><div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;    uint16_t twoCharsInByte {0};</div><div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;    <span class="keyword">const</span> <span class="keywordtype">string</span> macAddrPath = <span class="stringliteral">&quot;/sys/class/net/&quot;</span> + ifname + <span class="stringliteral">&quot;/address&quot;</span>;</div><div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;    ifstream devMacFile(macAddrPath);</div><div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;    <span class="keywordflow">if</span> (!devMacFile)</div><div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;        <span class="keywordflow">return</span> -1;</div><div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;    <span class="keywordtype">int</span> i{0};</div><div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;    <span class="keywordflow">do</span> {</div><div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;        <span class="keywordflow">if</span> (i &gt;= <a class="code" href="tcpip__headers_8hpp.xhtml#a592c4ecbb154db2b89e87842550525e2">ETHER_ADDRLEN</a>)</div><div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;            <span class="keywordflow">return</span> -1;</div><div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;</div><div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;        devMacFile &gt;&gt; hex &gt;&gt; twoCharsInByte;</div><div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;        g_devMac.<a class="code" href="struct_t_o_o_l_1_1mac__addr.xhtml#a300953da210b9b54c4b8dbc73d650f3f">bytes</a>[i] = twoCharsInByte;</div><div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;        i++; </div><div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;    } <span class="keywordflow">while</span> (devMacFile.get() != <span class="charliteral">&#39;\n&#39;</span>);</div><div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;    <span class="keywordflow">return</span> 0;</div><div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;</div><div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;}</div><div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;</div><div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;</div><div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;<span class="keywordtype">int</span> getSocketFile(Netflow *n, <span class="keywordtype">string</span> &amp;file)</div><div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;{</div><div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;    <span class="keyword">const</span> <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> proto = n-&gt;getProto();</div><div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;    <span class="keyword">const</span> <span class="keywordtype">unsigned</span> <span class="keywordtype">char</span> ipVer = n-&gt;getIpVersion();</div><div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;</div><div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;    <span class="keywordflow">if</span> (proto == <a class="code" href="tcpip__headers_8hpp.xhtml#a811a9c0dd5d4b0f0bb5848e764d91017">PROTO_UDP</a>)</div><div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;        file = <span class="stringliteral">&quot;/proc/net/udp&quot;</span>;</div><div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;    <span class="keywordflow">else</span> <span class="keywordflow">if</span> (proto == <a class="code" href="tcpip__headers_8hpp.xhtml#a8a613c50d4b87e140b5006e66872c476">PROTO_UDPLITE</a>)</div><div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;        file = <span class="stringliteral">&quot;/proc/net/udplite&quot;</span>;</div><div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;    <span class="keywordflow">else</span> <span class="keywordflow">if</span> (proto == <a class="code" href="tcpip__headers_8hpp.xhtml#a9ffdcf7d5e586cacd1d48afe7af9505f">PROTO_TCP</a>)</div><div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;        file = <span class="stringliteral">&quot;/proc/net/tcp&quot;</span>;</div><div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;    <span class="keywordflow">else</span></div><div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;    {</div><div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;        <a class="code" href="debug_8hpp.xhtml#a9340c95e0607709d793dc427c8b630e8">log</a>(LogLevel::ERR, <span class="stringliteral">&quot;Unsupported L4 protocol&quot;</span>);</div><div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;        <span class="keywordflow">return</span> -1;</div><div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;    }</div><div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;    </div><div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;    <span class="keywordflow">if</span> (ipVer == 6)</div><div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;        file += <span class="charliteral">&#39;6&#39;</span>;</div><div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;    <span class="keywordflow">else</span> <span class="keywordflow">if</span> (ipVer != 4)</div><div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;    {</div><div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;        <a class="code" href="debug_8hpp.xhtml#a9340c95e0607709d793dc427c8b630e8">log</a>(LogLevel::ERR, <span class="stringliteral">&quot;Unsupported IP protocol&quot;</span>);</div><div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;        <span class="keywordflow">return</span> -1;</div><div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;    }</div><div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;    <span class="keywordflow">return</span> 0;</div><div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;}</div><div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;</div><div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;</div><div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;<span class="keywordtype">int</span> <a class="code" href="tool__apple_8cpp.xhtml#aa5dccf12eda74373d0d26ca2c6f17643">getInode</a>(Netflow *n)</div><div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;{</div><div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;    <span class="comment">// in6_addr will be always bigger than in_addr so we can use it to store both IPv4 and IPv6</span></div><div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;    <span class="keyword">static</span> ip6_addr foundIp;</div><div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;    <span class="keyword">static</span> <span class="keywordtype">size_t</span> ipSize;</div><div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;</div><div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;    <span class="keyword">const</span> <span class="keywordtype">unsigned</span> <span class="keywordtype">char</span> ipVer = n-&gt;getIpVersion();</div><div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;    <span class="keywordflow">if</span> (ipVer == 4)</div><div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;       ipSize = <a class="code" href="tcpip__headers_8hpp.xhtml#a03283e6460404e870cdcc56e57394e43">IPv4_ADDRLEN</a>;</div><div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;    <span class="keywordflow">else</span> <span class="keywordflow">if</span> (ipVer == 6)</div><div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;       ipSize = <a class="code" href="tcpip__headers_8hpp.xhtml#a180abd840f2fad8dfd4f33f7e8467b67">IPv6_ADDRLEN</a>;</div><div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;    <span class="keywordflow">else</span></div><div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;    { </div><div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;        <a class="code" href="debug_8hpp.xhtml#a9340c95e0607709d793dc427c8b630e8">log</a>(LogLevel::ERR, <span class="stringliteral">&quot;IP protocol &quot;</span>, ipVer, <span class="stringliteral">&quot; is not supported.&quot;</span>); </div><div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;        <span class="keywordflow">return</span> -2; </div><div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;    }</div><div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;    memset(&amp;foundIp, 0, <span class="keyword">sizeof</span>(foundIp));</div><div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;</div><div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;    <span class="keywordflow">try</span></div><div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;    {</div><div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;        <span class="keyword">static</span> <span class="keywordtype">string</span> filename;</div><div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;</div><div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;        <span class="keywordflow">if</span> (getSocketFile(n, filename))</div><div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;            <span class="keywordflow">return</span> -2;</div><div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;</div><div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;        ifstream socketsFile;</div><div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;        socketsFile.open(filename);</div><div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;        <span class="keywordflow">if</span> (!socketsFile)</div><div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;            <span class="keywordflow">throw</span> (<span class="stringliteral">&quot;Can&#39;t open file &quot;</span> + filename);</div><div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;</div><div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;        <span class="keyword">static</span> streamoff pos_localIp, pos_localPort, pos_inode;</div><div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;        <span class="keyword">static</span> <span class="keywordtype">string</span> dummyStr;</div><div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;        <span class="keyword">static</span> <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> lineLength, inode;</div><div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;        <span class="keyword">static</span> uint16_t foundPort;</div><div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;        <span class="keyword">static</span> uint16_t wantedPort;</div><div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;</div><div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;        wantedPort = n-&gt;getLocalPort();</div><div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;        inode = -1;</div><div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;<span class="preprocessor">#if 1</span></div><div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;        <span class="keyword">const</span> <span class="keywordtype">char</span> IP_SIZE = (ipVer == 4) ? <a class="code" href="tcpip__headers_8hpp.xhtml#a03283e6460404e870cdcc56e57394e43">IPv4_ADDRLEN</a> : <a class="code" href="tcpip__headers_8hpp.xhtml#a180abd840f2fad8dfd4f33f7e8467b67">IPv6_ADDRLEN</a>;</div><div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;</div><div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;        getline(socketsFile, dummyStr); <span class="comment">// get first line to find out length of the other lines</span></div><div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;        lineLength = dummyStr.length() + 1;</div><div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;        getline(socketsFile, dummyStr, <span class="charliteral">&#39;:&#39;</span>); <span class="comment">// get rid of the first column</span></div><div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160;        pos_localIp = socketsFile.tellg();</div><div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;        pos_localIp++; <span class="comment">// space after first column (&quot;sl&quot;)</span></div><div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160;        pos_localPort = pos_localIp + IP_SIZE*2 + 1; <span class="comment">// localIP + &#39;:&#39; delimiter</span></div><div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160;        <span class="comment">// localPort remoteIp:remotePort st tx_queue:rx_queue tr:tm-&gt;when retrnsmt</span></div><div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160;        pos_inode = pos_localPort+3+ 1 +IP_SIZE*2+1+4+ 1+2+1 +8+1+8+ 1 +2+1+8 +1+8+1;</div><div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160;        </div><div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160;        <span class="comment">// cycle over remaining lines</span></div><div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160;        <span class="keywordflow">do</span> {</div><div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160;            socketsFile.seekg(pos_localPort); <span class="comment">// move before localPort</span></div><div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160;</div><div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160;            socketsFile &gt;&gt; hex &gt;&gt; foundPort;</div><div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160;            <span class="comment">//D(wantedPort &lt;&lt; &quot; vs. &quot; &lt;&lt; foundPort);</span></div><div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160;            <span class="keywordflow">if</span> (foundPort == wantedPort)</div><div class="line"><a name="l00163"></a><span class="lineno">  163</span>&#160;            {</div><div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160;                <span class="keywordtype">char</span> c{0};</div><div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160;                <span class="comment">// compare localIp</span></div><div class="line"><a name="l00166"></a><span class="lineno">  166</span>&#160;                socketsFile.seekg(pos_localIp);</div><div class="line"><a name="l00167"></a><span class="lineno">  167</span>&#160;                <span class="keywordflow">if</span> (ipVer == 4)</div><div class="line"><a name="l00168"></a><span class="lineno">  168</span>&#160;                {</div><div class="line"><a name="l00169"></a><span class="lineno">  169</span>&#160;                    <span class="keywordtype">char</span> i{0};</div><div class="line"><a name="l00170"></a><span class="lineno">  170</span>&#160;                    uint8_t parts[<a class="code" href="tcpip__headers_8hpp.xhtml#a03283e6460404e870cdcc56e57394e43">IPv4_ADDRLEN</a>];</div><div class="line"><a name="l00171"></a><span class="lineno">  171</span>&#160;                    <span class="keyword">const</span> <span class="keywordtype">unsigned</span> <span class="keywordtype">char</span> CHARS_PER_OCTET = 2;</div><div class="line"><a name="l00172"></a><span class="lineno">  172</span>&#160;</div><div class="line"><a name="l00173"></a><span class="lineno">  173</span>&#160;                    <span class="keywordflow">while</span> (socketsFile.get(c), c != <span class="charliteral">&#39;:&#39;</span> &amp;&amp; c != 0) </div><div class="line"><a name="l00174"></a><span class="lineno">  174</span>&#160;                    {</div><div class="line"><a name="l00175"></a><span class="lineno">  175</span>&#160;                        <span class="keywordflow">if</span> (c &gt;= <span class="charliteral">&#39;0&#39;</span> &amp;&amp; c &lt;= <span class="charliteral">&#39;9&#39;</span>)</div><div class="line"><a name="l00176"></a><span class="lineno">  176</span>&#160;                            c -= <span class="charliteral">&#39;0&#39;</span>;</div><div class="line"><a name="l00177"></a><span class="lineno">  177</span>&#160;                        <span class="keywordflow">else</span> <span class="keywordflow">if</span> (c &gt;= <span class="charliteral">&#39;A&#39;</span> &amp;&amp; c &lt;= <span class="charliteral">&#39;F&#39;</span>)</div><div class="line"><a name="l00178"></a><span class="lineno">  178</span>&#160;                            c = 10 + c - <span class="charliteral">&#39;A&#39;</span>; <span class="comment">// get from &#39;A&#39; decimal 10</span></div><div class="line"><a name="l00179"></a><span class="lineno">  179</span>&#160;                        <span class="keywordflow">else</span></div><div class="line"><a name="l00180"></a><span class="lineno">  180</span>&#160;                        {</div><div class="line"><a name="l00181"></a><span class="lineno">  181</span>&#160;                            <a class="code" href="debug_8hpp.xhtml#a9340c95e0607709d793dc427c8b630e8">log</a>(LogLevel::ERR, <span class="stringliteral">&quot;An Unexpected hexadecimal character in IP address in procfs: &quot;</span>, c);</div><div class="line"><a name="l00182"></a><span class="lineno">  182</span>&#160;                            <span class="keywordflow">break</span>;</div><div class="line"><a name="l00183"></a><span class="lineno">  183</span>&#160;                        }</div><div class="line"><a name="l00184"></a><span class="lineno">  184</span>&#160;                        <span class="comment">// 01 00 00 7F      :c  == 127.0.0.1     (IP address char)</span></div><div class="line"><a name="l00185"></a><span class="lineno">  185</span>&#160;                        <span class="comment">// 01 23 45 67      :i                   (position)</span></div><div class="line"><a name="l00186"></a><span class="lineno">  186</span>&#160;                        <span class="comment">// 0  1  2  3       :i / CHARS_PER_OCTET (corresponding octet)</span></div><div class="line"><a name="l00187"></a><span class="lineno">  187</span>&#160;                        parts[i / CHARS_PER_OCTET] = parts[i/CHARS_PER_OCTET]*16 + c;</div><div class="line"><a name="l00188"></a><span class="lineno">  188</span>&#160;                        i++;</div><div class="line"><a name="l00189"></a><span class="lineno">  189</span>&#160;                    }</div><div class="line"><a name="l00190"></a><span class="lineno">  190</span>&#160;                    <span class="keyword">reinterpret_cast&lt;</span>ip4_addr*<span class="keyword">&gt;</span>(&amp;foundIp)-&gt;addr |= (parts[0] &lt;&lt; 24) | (parts[1] &lt;&lt; 16) | (parts[2] &lt;&lt; 8) | parts[3];</div><div class="line"><a name="l00191"></a><span class="lineno">  191</span>&#160;                }</div><div class="line"><a name="l00192"></a><span class="lineno">  192</span>&#160;                <span class="keywordflow">else</span></div><div class="line"><a name="l00193"></a><span class="lineno">  193</span>&#160;                {</div><div class="line"><a name="l00194"></a><span class="lineno">  194</span>&#160;                    <span class="keyword">static</span> uint8_t indexes[16] = {3,2,1,0,7,6,5,4,11,10,9,8,15,14,13,12};</div><div class="line"><a name="l00195"></a><span class="lineno">  195</span>&#160;                    <span class="keyword">static</span> ip6_addr* foundIp6;</div><div class="line"><a name="l00196"></a><span class="lineno">  196</span>&#160;                    <span class="keyword">static</span> uint8_t halfByte;</div><div class="line"><a name="l00197"></a><span class="lineno">  197</span>&#160;                    <span class="keyword">static</span> uint8_t byte;</div><div class="line"><a name="l00198"></a><span class="lineno">  198</span>&#160;                    foundIp6 = <span class="keyword">reinterpret_cast&lt;</span>ip6_addr*<span class="keyword">&gt;</span>(&amp;foundIp);</div><div class="line"><a name="l00199"></a><span class="lineno">  199</span>&#160;                    <span class="keywordflow">for</span> (<span class="keywordtype">int</span> i=0; i &lt; 16; i++)</div><div class="line"><a name="l00200"></a><span class="lineno">  200</span>&#160;                    {</div><div class="line"><a name="l00201"></a><span class="lineno">  201</span>&#160;                        socketsFile &gt;&gt; halfByte;</div><div class="line"><a name="l00202"></a><span class="lineno">  202</span>&#160;                        <span class="keywordflow">if</span> (halfByte &gt;= <span class="charliteral">&#39;A&#39;</span>)</div><div class="line"><a name="l00203"></a><span class="lineno">  203</span>&#160;                            byte = (halfByte - <span class="charliteral">&#39;A&#39;</span> + 10) * 16;</div><div class="line"><a name="l00204"></a><span class="lineno">  204</span>&#160;                        <span class="keywordflow">else</span></div><div class="line"><a name="l00205"></a><span class="lineno">  205</span>&#160;                            byte = (halfByte - <span class="charliteral">&#39;0&#39;</span>) * 16;</div><div class="line"><a name="l00206"></a><span class="lineno">  206</span>&#160;                        </div><div class="line"><a name="l00207"></a><span class="lineno">  207</span>&#160;                        socketsFile &gt;&gt; halfByte;</div><div class="line"><a name="l00208"></a><span class="lineno">  208</span>&#160;                        <span class="keywordflow">if</span> (halfByte &gt;= <span class="charliteral">&#39;A&#39;</span>)</div><div class="line"><a name="l00209"></a><span class="lineno">  209</span>&#160;                            byte += (halfByte - <span class="charliteral">&#39;A&#39;</span> + 10);</div><div class="line"><a name="l00210"></a><span class="lineno">  210</span>&#160;                        <span class="keywordflow">else</span></div><div class="line"><a name="l00211"></a><span class="lineno">  211</span>&#160;                            byte += (halfByte - <span class="charliteral">&#39;0&#39;</span>);</div><div class="line"><a name="l00212"></a><span class="lineno">  212</span>&#160;</div><div class="line"><a name="l00213"></a><span class="lineno">  213</span>&#160;                        foundIp6-&gt;addr.addr8[indexes[i]] = byte;</div><div class="line"><a name="l00214"></a><span class="lineno">  214</span>&#160;                    }</div><div class="line"><a name="l00215"></a><span class="lineno">  215</span>&#160;                }</div><div class="line"><a name="l00216"></a><span class="lineno">  216</span>&#160;</div><div class="line"><a name="l00217"></a><span class="lineno">  217</span>&#160;                <span class="comment">// static variables are automatically initialized to zero unless there is an initializer</span></div><div class="line"><a name="l00218"></a><span class="lineno">  218</span>&#160;                <span class="comment">// ip6_addr is bigger so we can use it to compare for both ip versions</span></div><div class="line"><a name="l00219"></a><span class="lineno">  219</span>&#160;                <span class="comment">// if it is our IP address or broadcast</span></div><div class="line"><a name="l00220"></a><span class="lineno">  220</span>&#160;                <span class="keyword">static</span> <span class="keywordtype">char</span> zeroBlock [<span class="keyword">sizeof</span>(ip6_addr)];</div><div class="line"><a name="l00221"></a><span class="lineno">  221</span>&#160;                <span class="keywordflow">if</span> (!memcmp(n-&gt;getLocalIp(), &amp;foundIp, ipSize) || !memcmp(&amp;foundIp, zeroBlock, ipSize))</div><div class="line"><a name="l00222"></a><span class="lineno">  222</span>&#160;                {</div><div class="line"><a name="l00223"></a><span class="lineno">  223</span>&#160;</div><div class="line"><a name="l00224"></a><span class="lineno">  224</span>&#160;                    socketsFile.seekg(pos_inode);</div><div class="line"><a name="l00225"></a><span class="lineno">  225</span>&#160;                    <span class="comment">// other columns (uid, timeout) have variable width</span></div><div class="line"><a name="l00226"></a><span class="lineno">  226</span>&#160;                    <span class="keywordtype">char</span> column = 0;</div><div class="line"><a name="l00227"></a><span class="lineno">  227</span>&#160;                    <span class="keywordtype">bool</span> inColumn = <span class="keyword">false</span>;</div><div class="line"><a name="l00228"></a><span class="lineno">  228</span>&#160;                    <span class="keywordflow">while</span>(column != 3 &amp;&amp; socketsFile.good())</div><div class="line"><a name="l00229"></a><span class="lineno">  229</span>&#160;                    {</div><div class="line"><a name="l00232"></a><span class="lineno">  232</span>&#160;                        <span class="comment">// it got the same char all the time (&#39;:&#39; when it occured after signal 2 call)</span></div><div class="line"><a name="l00233"></a><span class="lineno">  233</span>&#160;                        <span class="comment">// so column is never equal 3</span></div><div class="line"><a name="l00234"></a><span class="lineno">  234</span>&#160;                        socketsFile.get(c);</div><div class="line"><a name="l00235"></a><span class="lineno">  235</span>&#160;                        <span class="keywordflow">if</span> (c != <span class="charliteral">&#39; &#39;</span>)</div><div class="line"><a name="l00236"></a><span class="lineno">  236</span>&#160;                        {</div><div class="line"><a name="l00237"></a><span class="lineno">  237</span>&#160;                            <span class="keywordflow">if</span> (!inColumn)</div><div class="line"><a name="l00238"></a><span class="lineno">  238</span>&#160;                            {</div><div class="line"><a name="l00239"></a><span class="lineno">  239</span>&#160;                                column++;</div><div class="line"><a name="l00240"></a><span class="lineno">  240</span>&#160;                                inColumn = <span class="keyword">true</span>;</div><div class="line"><a name="l00241"></a><span class="lineno">  241</span>&#160;                            }</div><div class="line"><a name="l00242"></a><span class="lineno">  242</span>&#160;                        }</div><div class="line"><a name="l00243"></a><span class="lineno">  243</span>&#160;                        <span class="keywordflow">else</span></div><div class="line"><a name="l00244"></a><span class="lineno">  244</span>&#160;                            inColumn = <span class="keyword">false</span>;</div><div class="line"><a name="l00245"></a><span class="lineno">  245</span>&#160;                    }</div><div class="line"><a name="l00246"></a><span class="lineno">  246</span>&#160;                    <span class="keywordflow">if</span> (column != 3)</div><div class="line"><a name="l00247"></a><span class="lineno">  247</span>&#160;                        <span class="keywordflow">throw</span> <span class="stringliteral">&quot;Inode column not found&quot;</span>;</div><div class="line"><a name="l00248"></a><span class="lineno">  248</span>&#160;                    socketsFile.unget();</div><div class="line"><a name="l00249"></a><span class="lineno">  249</span>&#160;</div><div class="line"><a name="l00250"></a><span class="lineno">  250</span>&#160;                    socketsFile &gt;&gt; dec &gt;&gt; inode;</div><div class="line"><a name="l00251"></a><span class="lineno">  251</span>&#160;                    <span class="keywordflow">break</span>;</div><div class="line"><a name="l00252"></a><span class="lineno">  252</span>&#160;                }</div><div class="line"><a name="l00253"></a><span class="lineno">  253</span>&#160;            }</div><div class="line"><a name="l00255"></a><span class="lineno">  255</span>&#160;            pos_localIp += lineLength; <span class="comment">// all lines are the same length</span></div><div class="line"><a name="l00256"></a><span class="lineno">  256</span>&#160;            pos_localPort += lineLength;</div><div class="line"><a name="l00257"></a><span class="lineno">  257</span>&#160;            pos_inode += lineLength;</div><div class="line"><a name="l00258"></a><span class="lineno">  258</span>&#160;        } <span class="keywordflow">while</span> (getline(socketsFile, dummyStr));</div><div class="line"><a name="l00259"></a><span class="lineno">  259</span>&#160;<span class="preprocessor">#else</span></div><div class="line"><a name="l00260"></a><span class="lineno">  260</span>&#160;        socketsFile.ignore(std::numeric_limits&lt;std::streamsize&gt;::max(), <span class="charliteral">&#39;\n&#39;</span>);</div><div class="line"><a name="l00262"></a><span class="lineno">  262</span>&#160;        <span class="comment">//</span></div><div class="line"><a name="l00263"></a><span class="lineno">  263</span>&#160;        <span class="comment">//</span></div><div class="line"><a name="l00264"></a><span class="lineno">  264</span>&#160;        <span class="keywordtype">string</span> nextLine(istream&amp;, <span class="keywordtype">string</span>&amp;&amp; = <span class="keywordtype">string</span>());</div><div class="line"><a name="l00265"></a><span class="lineno">  265</span>&#160;</div><div class="line"><a name="l00266"></a><span class="lineno">  266</span>&#160;        <span class="comment">// calling once, or when allocation cost doesn&#39;t matter</span></div><div class="line"><a name="l00267"></a><span class="lineno">  267</span>&#160;        <span class="keyword">auto</span> line = nextLine(strm);</div><div class="line"><a name="l00268"></a><span class="lineno">  268</span>&#160;        </div><div class="line"><a name="l00269"></a><span class="lineno">  269</span>&#160;        <span class="comment">// calling in a loop</span></div><div class="line"><a name="l00270"></a><span class="lineno">  270</span>&#160;        <span class="keywordtype">string</span> line;</div><div class="line"><a name="l00271"></a><span class="lineno">  271</span>&#160;        <span class="keywordflow">for</span> (...)</div><div class="line"><a name="l00272"></a><span class="lineno">  272</span>&#160;            line = nextLine(strm, std::move(line));</div><div class="line"><a name="l00274"></a><span class="lineno">  274</span>&#160;        <span class="comment">//</span></div><div class="line"><a name="l00275"></a><span class="lineno">  275</span>&#160;        <span class="comment">//https://channel9.msdn.com/Events/GoingNative/2013/Writing-Quick-Code-in-Cpp-Quickly</span></div><div class="line"><a name="l00276"></a><span class="lineno">  276</span>&#160;        <span class="keyword">typedef</span> std::istreambuf_iterator&lt;char&gt; iter;</div><div class="line"><a name="l00277"></a><span class="lineno">  277</span>&#160;</div><div class="line"><a name="l00278"></a><span class="lineno">  278</span>&#160;        std::ifstream input_file(<span class="stringliteral">&quot;textfile.txt&quot;</span>);</div><div class="line"><a name="l00279"></a><span class="lineno">  279</span>&#160;        iter file_begin(input_file);</div><div class="line"><a name="l00280"></a><span class="lineno">  280</span>&#160;        iter file_end;</div><div class="line"><a name="l00281"></a><span class="lineno">  281</span>&#160;</div><div class="line"><a name="l00282"></a><span class="lineno">  282</span>&#160;        <span class="keywordflow">for</span> (iter i = file_begin; i != file_end; ++i)</div><div class="line"><a name="l00283"></a><span class="lineno">  283</span>&#160;            std::clog &lt;&lt; *i;</div><div class="line"><a name="l00284"></a><span class="lineno">  284</span>&#160;<span class="preprocessor">#endif</span></div><div class="line"><a name="l00285"></a><span class="lineno">  285</span>&#160;        <span class="keywordflow">return</span> inode;</div><div class="line"><a name="l00286"></a><span class="lineno">  286</span>&#160;    }</div><div class="line"><a name="l00287"></a><span class="lineno">  287</span>&#160;    <span class="keywordflow">catch</span>(<span class="keywordtype">char</span> <span class="keyword">const</span> *msg)</div><div class="line"><a name="l00288"></a><span class="lineno">  288</span>&#160;    {</div><div class="line"><a name="l00289"></a><span class="lineno">  289</span>&#160;        <a class="code" href="debug_8hpp.xhtml#a9340c95e0607709d793dc427c8b630e8">log</a>(LogLevel::ERR, msg);</div><div class="line"><a name="l00290"></a><span class="lineno">  290</span>&#160;        <span class="keywordflow">return</span> -2;</div><div class="line"><a name="l00291"></a><span class="lineno">  291</span>&#160;    }</div><div class="line"><a name="l00292"></a><span class="lineno">  292</span>&#160;}</div><div class="line"><a name="l00293"></a><span class="lineno">  293</span>&#160;</div><div class="line"><a name="l00294"></a><span class="lineno">  294</span>&#160;</div><div class="line"><a name="l00295"></a><span class="lineno"><a class="line" href="tool__linux_8cpp.xhtml#acecfe465c85a3ca3a91897379f4de033">  295</a></span>&#160;<span class="keywordtype">int</span> <a class="code" href="tool__apple_8cpp.xhtml#a63c27248ec65a6590399df8a33645015">getApp</a>(<span class="keyword">const</span> <span class="keywordtype">int</span> inode, <span class="keywordtype">string</span> &amp;appName)</div><div class="line"><a name="l00296"></a><span class="lineno">  296</span>&#160;{</div><div class="line"><a name="l00297"></a><span class="lineno">  297</span>&#160;    DIR *procDir{<span class="keyword">nullptr</span>}, *fdDir{<span class="keyword">nullptr</span>};</div><div class="line"><a name="l00298"></a><span class="lineno">  298</span>&#160;    <span class="keywordflow">try</span></div><div class="line"><a name="l00299"></a><span class="lineno">  299</span>&#160;    {</div><div class="line"><a name="l00300"></a><span class="lineno">  300</span>&#160;        <span class="keyword">static</span> <span class="keywordtype">char</span> inodeBuff[64] ={0}; </div><div class="line"><a name="l00301"></a><span class="lineno">  301</span>&#160;        <span class="keyword">static</span> <span class="keywordtype">string</span> tmpString;</div><div class="line"><a name="l00302"></a><span class="lineno">  302</span>&#160;        <span class="comment">// WIN: https://msdn.microsoft.com/en-us/library/ms683180(VS.85).aspx</span></div><div class="line"><a name="l00303"></a><span class="lineno">  303</span>&#160;        <span class="keyword">static</span> <span class="keywordtype">int</span> myPid = ::getpid();</div><div class="line"><a name="l00304"></a><span class="lineno">  304</span>&#160;</div><div class="line"><a name="l00305"></a><span class="lineno">  305</span>&#160;        dirent *pidEntry{<span class="keyword">nullptr</span>}, *fdEntry{<span class="keyword">nullptr</span>};</div><div class="line"><a name="l00306"></a><span class="lineno">  306</span>&#160;        <span class="keywordtype">int</span> pid{0}, fd{0};</div><div class="line"><a name="l00307"></a><span class="lineno">  307</span>&#160;</div><div class="line"><a name="l00308"></a><span class="lineno">  308</span>&#160;        <span class="keywordflow">if</span> ((procDir = opendir(<span class="stringliteral">&quot;/proc/&quot;</span>)) == <span class="keyword">nullptr</span>)</div><div class="line"><a name="l00309"></a><span class="lineno">  309</span>&#160;            <span class="keywordflow">throw</span> <a class="code" href="struct_t_o_o_l_1_1std__ex.xhtml">std_ex</a>(<span class="stringliteral">&quot;Can&#39;t open /proc/ directory&quot;</span>);</div><div class="line"><a name="l00310"></a><span class="lineno">  310</span>&#160;</div><div class="line"><a name="l00311"></a><span class="lineno">  311</span>&#160;        <span class="keywordflow">while</span> ((pidEntry = readdir(procDir)))</div><div class="line"><a name="l00312"></a><span class="lineno">  312</span>&#160;        {</div><div class="line"><a name="l00313"></a><span class="lineno">  313</span>&#160;            <span class="keywordflow">if</span> (<a class="code" href="utils_8cpp.xhtml#a468dec2ae199f10efd24422042e75f28">chToInt</a>(pidEntry-&gt;d_name, pid))</div><div class="line"><a name="l00314"></a><span class="lineno">  314</span>&#160;                <span class="keywordflow">continue</span>;</div><div class="line"><a name="l00315"></a><span class="lineno">  315</span>&#160;            <span class="keywordflow">if</span> (myPid == pid || pid == 0)</div><div class="line"><a name="l00316"></a><span class="lineno">  316</span>&#160;                <span class="keywordflow">continue</span>;</div><div class="line"><a name="l00317"></a><span class="lineno">  317</span>&#160;</div><div class="line"><a name="l00318"></a><span class="lineno">  318</span>&#160;            tmpString = <span class="stringliteral">&quot;/proc/&quot;</span>; tmpString += pidEntry-&gt;d_name; tmpString += <span class="stringliteral">&quot;/fd/&quot;</span>;</div><div class="line"><a name="l00319"></a><span class="lineno">  319</span>&#160;            <span class="keywordflow">if</span> ((fdDir = opendir(tmpString.c_str())) == <span class="keyword">nullptr</span>)</div><div class="line"><a name="l00320"></a><span class="lineno">  320</span>&#160;                <span class="keywordflow">throw</span> <a class="code" href="struct_t_o_o_l_1_1std__ex.xhtml">std_ex</a>(<span class="stringliteral">&quot;Can&#39;t open &quot;</span> + tmpString);</div><div class="line"><a name="l00321"></a><span class="lineno">  321</span>&#160;</div><div class="line"><a name="l00322"></a><span class="lineno">  322</span>&#160;            <span class="keywordflow">while</span> ((fdEntry = readdir(fdDir)))</div><div class="line"><a name="l00323"></a><span class="lineno">  323</span>&#160;            {</div><div class="line"><a name="l00324"></a><span class="lineno">  324</span>&#160;                <span class="keywordflow">if</span> (<a class="code" href="utils_8cpp.xhtml#a468dec2ae199f10efd24422042e75f28">chToInt</a>(fdEntry-&gt;d_name, fd))</div><div class="line"><a name="l00325"></a><span class="lineno">  325</span>&#160;                    <span class="keywordflow">continue</span>;</div><div class="line"><a name="l00326"></a><span class="lineno">  326</span>&#160;</div><div class="line"><a name="l00327"></a><span class="lineno">  327</span>&#160;                <span class="keywordflow">if</span> (fd &lt;= 2) <span class="comment">// stdin, stdout, stderr</span></div><div class="line"><a name="l00328"></a><span class="lineno">  328</span>&#160;                    <span class="keywordflow">continue</span>;</div><div class="line"><a name="l00329"></a><span class="lineno">  329</span>&#160;                <span class="comment">// the fastest option</span></div><div class="line"><a name="l00330"></a><span class="lineno">  330</span>&#160;                tmpString = <span class="stringliteral">&quot;/proc/&quot;</span>;  tmpString += pidEntry-&gt;d_name;</div><div class="line"><a name="l00331"></a><span class="lineno">  331</span>&#160;                tmpString += <span class="stringliteral">&quot;/fd/&quot;</span>;   tmpString += fdEntry-&gt;d_name;</div><div class="line"><a name="l00332"></a><span class="lineno">  332</span>&#160;                <span class="keywordtype">int</span> ll = readlink(tmpString.c_str(), inodeBuff, <span class="keyword">sizeof</span>(inodeBuff));</div><div class="line"><a name="l00333"></a><span class="lineno">  333</span>&#160;                <span class="keywordflow">if</span> (ll == -1)</div><div class="line"><a name="l00334"></a><span class="lineno">  334</span>&#160;                    <a class="code" href="debug_8hpp.xhtml#a9340c95e0607709d793dc427c8b630e8">log</a>(LogLevel::ERR, <span class="stringliteral">&quot;Readlink error: &quot;</span>, tmpString, <span class="stringliteral">&quot;\n&quot;</span>, strerror(errno));</div><div class="line"><a name="l00335"></a><span class="lineno">  335</span>&#160;                <span class="keywordflow">if</span> (inodeBuff[0] != <span class="charliteral">&#39;s&#39;</span> || inodeBuff[6] != <span class="charliteral">&#39;:&#39;</span>) <span class="comment">// socket:[&lt;inode&gt;]</span></div><div class="line"><a name="l00336"></a><span class="lineno">  336</span>&#160;                    <span class="keywordflow">continue</span>;</div><div class="line"><a name="l00337"></a><span class="lineno">  337</span>&#160;                <span class="keywordtype">char</span> *tmpPtr = strchr(&amp;inodeBuff[7], <span class="charliteral">&#39;]&#39;</span>);</div><div class="line"><a name="l00338"></a><span class="lineno">  338</span>&#160;                <span class="keywordflow">if</span> (tmpPtr == <span class="keyword">nullptr</span>)</div><div class="line"><a name="l00339"></a><span class="lineno">  339</span>&#160;                    <span class="keywordflow">throw</span> <a class="code" href="struct_t_o_o_l_1_1std__ex.xhtml">std_ex</a>(concatenate(<span class="stringliteral">&quot;Right &#39;]&#39; not found in the socket link: &quot;</span>, inodeBuff));</div><div class="line"><a name="l00340"></a><span class="lineno">  340</span>&#160;                *tmpPtr = <span class="charliteral">&#39;\0&#39;</span>;</div><div class="line"><a name="l00341"></a><span class="lineno">  341</span>&#160;                <span class="keywordtype">int</span> foundInode {0};</div><div class="line"><a name="l00342"></a><span class="lineno">  342</span>&#160;                <span class="keywordflow">if</span> (<a class="code" href="utils_8cpp.xhtml#a468dec2ae199f10efd24422042e75f28">chToInt</a>(&amp;inodeBuff[8], foundInode))</div><div class="line"><a name="l00343"></a><span class="lineno">  343</span>&#160;                    <span class="keywordflow">throw</span> <span class="stringliteral">&quot;Can&#39;t convert socket inode to integer&quot;</span>;</div><div class="line"><a name="l00344"></a><span class="lineno">  344</span>&#160;                <span class="keywordflow">if</span> (foundInode == inode)</div><div class="line"><a name="l00345"></a><span class="lineno">  345</span>&#160;                {</div><div class="line"><a name="l00346"></a><span class="lineno">  346</span>&#160;                    ifstream appNameFile(concatenate(<span class="stringliteral">&quot;/proc/&quot;</span>, pidEntry-&gt;d_name, <span class="stringliteral">&quot;/cmdline&quot;</span>));</div><div class="line"><a name="l00347"></a><span class="lineno">  347</span>&#160;                    <span class="comment">// arguments are delimited with &#39;\0&#39;</span></div><div class="line"><a name="l00348"></a><span class="lineno">  348</span>&#160;                    getline(appNameFile,appName);</div><div class="line"><a name="l00349"></a><span class="lineno">  349</span>&#160;</div><div class="line"><a name="l00350"></a><span class="lineno">  350</span>&#160;                    closedir(fdDir);</div><div class="line"><a name="l00351"></a><span class="lineno">  351</span>&#160;                    <span class="keywordflow">goto</span> END;</div><div class="line"><a name="l00352"></a><span class="lineno">  352</span>&#160;                }</div><div class="line"><a name="l00353"></a><span class="lineno">  353</span>&#160;            }</div><div class="line"><a name="l00354"></a><span class="lineno">  354</span>&#160;            closedir(fdDir);</div><div class="line"><a name="l00355"></a><span class="lineno">  355</span>&#160;        }</div><div class="line"><a name="l00356"></a><span class="lineno">  356</span>&#160;END:</div><div class="line"><a name="l00357"></a><span class="lineno">  357</span>&#160;        closedir(procDir);</div><div class="line"><a name="l00358"></a><span class="lineno">  358</span>&#160;        <span class="keywordflow">if</span> (pidEntry == <span class="keyword">nullptr</span>)</div><div class="line"><a name="l00359"></a><span class="lineno">  359</span>&#160;        {</div><div class="line"><a name="l00360"></a><span class="lineno">  360</span>&#160;            <a class="code" href="debug_8hpp.xhtml#a9340c95e0607709d793dc427c8b630e8">log</a>(LogLevel::ERR, <span class="stringliteral">&quot;Application not found for inode &quot;</span>, inode);</div><div class="line"><a name="l00361"></a><span class="lineno">  361</span>&#160;            <a class="code" href="tool__linux_8cpp.xhtml#a6fcedd7165126a470d02412573dea7c3">g_notFoundApps</a>++;</div><div class="line"><a name="l00362"></a><span class="lineno">  362</span>&#160;        }</div><div class="line"><a name="l00363"></a><span class="lineno">  363</span>&#160;        <span class="keywordflow">return</span> 0;</div><div class="line"><a name="l00364"></a><span class="lineno">  364</span>&#160;    }</div><div class="line"><a name="l00365"></a><span class="lineno">  365</span>&#160;    <span class="keywordflow">catch</span>(<a class="code" href="struct_t_o_o_l_1_1std__ex.xhtml">std_ex</a>&amp; e) {</div><div class="line"><a name="l00366"></a><span class="lineno">  366</span>&#160;        cerr &lt;&lt; e.what() &lt;&lt; std::endl;</div><div class="line"><a name="l00367"></a><span class="lineno">  367</span>&#160;        <span class="keywordflow">if</span> (procDir)</div><div class="line"><a name="l00368"></a><span class="lineno">  368</span>&#160;            closedir(procDir);</div><div class="line"><a name="l00369"></a><span class="lineno">  369</span>&#160;        <span class="keywordflow">if</span> (fdDir)</div><div class="line"><a name="l00370"></a><span class="lineno">  370</span>&#160;            closedir(fdDir);</div><div class="line"><a name="l00371"></a><span class="lineno">  371</span>&#160;        <span class="keywordflow">return</span> -1;</div><div class="line"><a name="l00372"></a><span class="lineno">  372</span>&#160;    }</div><div class="line"><a name="l00373"></a><span class="lineno">  373</span>&#160;    <span class="keywordflow">catch</span>(<span class="keywordtype">char</span> <span class="keyword">const</span> *msg)</div><div class="line"><a name="l00374"></a><span class="lineno">  374</span>&#160;    {</div><div class="line"><a name="l00375"></a><span class="lineno">  375</span>&#160;        cerr &lt;&lt; <span class="stringliteral">&quot;ERROR: &quot;</span> &lt;&lt; msg &lt;&lt; endl;</div><div class="line"><a name="l00376"></a><span class="lineno">  376</span>&#160;        <span class="keywordflow">if</span> (procDir)</div><div class="line"><a name="l00377"></a><span class="lineno">  377</span>&#160;            closedir(procDir);</div><div class="line"><a name="l00378"></a><span class="lineno">  378</span>&#160;        <span class="keywordflow">if</span> (fdDir)</div><div class="line"><a name="l00379"></a><span class="lineno">  379</span>&#160;            closedir(fdDir);</div><div class="line"><a name="l00380"></a><span class="lineno">  380</span>&#160;        <span class="keywordflow">return</span> -1;</div><div class="line"><a name="l00381"></a><span class="lineno">  381</span>&#160;    }</div><div class="line"><a name="l00382"></a><span class="lineno">  382</span>&#160;}</div><div class="line"><a name="l00383"></a><span class="lineno">  383</span>&#160;</div><div class="line"><a name="l00384"></a><span class="lineno">  384</span>&#160;</div><div class="line"><a name="l00385"></a><span class="lineno">  385</span>&#160;}</div><div class="ttc" id="tcpip__headers_8hpp_xhtml_a03283e6460404e870cdcc56e57394e43"><div class="ttname"><a href="tcpip__headers_8hpp.xhtml#a03283e6460404e870cdcc56e57394e43">IPv4_ADDRLEN</a></div><div class="ttdeci">#define IPv4_ADDRLEN</div><div class="ttdoc">Length of IPv4 address. </div><div class="ttdef"><b>Definition:</b> <a href="tcpip__headers_8hpp_source.xhtml#l00061">tcpip_headers.hpp:61</a></div></div>
<div class="ttc" id="struct_t_o_o_l_1_1std__ex_xhtml"><div class="ttname"><a href="struct_t_o_o_l_1_1std__ex.xhtml">TOOL::std_ex</a></div><div class="ttdoc">Exception, which takes also string as parameter. </div><div class="ttdef"><b>Definition:</b> <a href="utils_8hpp_source.xhtml#l00031">utils.hpp:31</a></div></div>
<div class="ttc" id="tool__apple_8cpp_xhtml_a63c27248ec65a6590399df8a33645015"><div class="ttname"><a href="tool__apple_8cpp.xhtml#a63c27248ec65a6590399df8a33645015">TOOL::getApp</a></div><div class="ttdeci">int getApp(const int, std::string &amp;)</div><div class="ttdoc">Finds an application with opened socket inode in parameter. </div><div class="ttdef"><b>Definition:</b> <a href="tool__apple_8cpp_source.xhtml#l00036">tool_apple.cpp:36</a></div></div>
<div class="ttc" id="struct_t_o_o_l_1_1mac__addr_xhtml"><div class="ttname"><a href="struct_t_o_o_l_1_1mac__addr.xhtml">TOOL::mac_addr</a></div><div class="ttdoc">MAC address. </div><div class="ttdef"><b>Definition:</b> <a href="tcpip__headers_8hpp_source.xhtml#l00040">tcpip_headers.hpp:40</a></div></div>
<div class="ttc" id="tool__linux_8cpp_xhtml_a66c99b5dfab9066869a377e3a4f8cc7f"><div class="ttname"><a href="tool__linux_8cpp.xhtml#a66c99b5dfab9066869a377e3a4f8cc7f">g_dev</a></div><div class="ttdeci">const char * g_dev</div><div class="ttdoc">Capturing device name. </div><div class="ttdef"><b>Definition:</b> <a href="capturing_8cpp_source.xhtml#l00088">capturing.cpp:88</a></div></div>
<div class="ttc" id="debug_8hpp_xhtml_a9340c95e0607709d793dc427c8b630e8"><div class="ttname"><a href="debug_8hpp.xhtml#a9340c95e0607709d793dc427c8b630e8">TOOL::log</a></div><div class="ttdeci">void log(LogLevel ll, Ts &amp;&amp;... args)</div><div class="ttdoc">Function that prints log messages. </div><div class="ttdef"><b>Definition:</b> <a href="debug_8hpp_source.xhtml#l00070">debug.hpp:70</a></div></div>
<div class="ttc" id="debug_8hpp_xhtml"><div class="ttname"><a href="debug_8hpp.xhtml">debug.hpp</a></div><div class="ttdoc">Debugging functions. </div></div>
<div class="ttc" id="tool__apple_8cpp_xhtml_aa5dccf12eda74373d0d26ca2c6f17643"><div class="ttname"><a href="tool__apple_8cpp.xhtml#aa5dccf12eda74373d0d26ca2c6f17643">TOOL::getInode</a></div><div class="ttdeci">int getInode(Netflow *)</div><div class="ttdoc">Finds socket inode which belongs to Netflow n. </div><div class="ttdef"><b>Definition:</b> <a href="tool__apple_8cpp_source.xhtml#l00031">tool_apple.cpp:31</a></div></div>
<div class="ttc" id="netflow_8hpp_xhtml"><div class="ttname"><a href="netflow_8hpp.xhtml">netflow.hpp</a></div><div class="ttdoc">Netflow structure header file. </div></div>
<div class="ttc" id="tool__linux_8hpp_xhtml"><div class="ttname"><a href="tool__linux_8hpp.xhtml">tool_linux.hpp</a></div><div class="ttdoc">Determining applications and their sockets on Linux. </div></div>
<div class="ttc" id="tool__apple_8cpp_xhtml_abffa8d5a00da5ef52e025864e1b86829"><div class="ttname"><a href="tool__apple_8cpp.xhtml#abffa8d5a00da5ef52e025864e1b86829">TOOL::setDevMac</a></div><div class="ttdeci">int setDevMac()</div><div class="ttdoc">Sets mac address of g_dev interface into g_devMac. </div><div class="ttdef"><b>Definition:</b> <a href="tool__apple_8cpp_source.xhtml#l00021">tool_apple.cpp:21</a></div></div>
<div class="ttc" id="utils_8hpp_xhtml"><div class="ttname"><a href="utils_8hpp.xhtml">utils.hpp</a></div><div class="ttdoc">Small useful functions header file. </div></div>
<div class="ttc" id="utils_8cpp_xhtml_a468dec2ae199f10efd24422042e75f28"><div class="ttname"><a href="utils_8cpp.xhtml#a468dec2ae199f10efd24422042e75f28">TOOL::chToInt</a></div><div class="ttdeci">int chToInt(char *str, int &amp;res)</div><div class="ttdoc">Converts char* string to integer. </div><div class="ttdef"><b>Definition:</b> <a href="utils_8cpp_source.xhtml#l00030">utils.cpp:30</a></div></div>
<div class="ttc" id="tcpip__headers_8hpp_xhtml_a592c4ecbb154db2b89e87842550525e2"><div class="ttname"><a href="tcpip__headers_8hpp.xhtml#a592c4ecbb154db2b89e87842550525e2">ETHER_ADDRLEN</a></div><div class="ttdeci">#define ETHER_ADDRLEN</div><div class="ttdoc">Length of Ethernet address. </div><div class="ttdef"><b>Definition:</b> <a href="tcpip__headers_8hpp_source.xhtml#l00032">tcpip_headers.hpp:32</a></div></div>
<div class="ttc" id="namespacestd_xhtml"><div class="ttname"><a href="namespacestd.xhtml">std</a></div></div>
<div class="ttc" id="tool__linux_8cpp_xhtml_a6fcedd7165126a470d02412573dea7c3"><div class="ttname"><a href="tool__linux_8cpp.xhtml#a6fcedd7165126a470d02412573dea7c3">g_notFoundApps</a></div><div class="ttdeci">unsigned int g_notFoundApps</div><div class="ttdoc">Number of unsuccessful searches for application. </div><div class="ttdef"><b>Definition:</b> <a href="capturing_8cpp_source.xhtml#l00095">capturing.cpp:95</a></div></div>
<div class="ttc" id="tool__linux_8cpp_xhtml_a2a4595f71a05150f24c3e71423309414"><div class="ttname"><a href="tool__linux_8cpp.xhtml#a2a4595f71a05150f24c3e71423309414">g_devMac</a></div><div class="ttdeci">TOOL::mac_addr g_devMac</div><div class="ttdoc">Capturing device MAC address. </div><div class="ttdef"><b>Definition:</b> <a href="capturing_8cpp_source.xhtml#l00089">capturing.cpp:89</a></div></div>
<div class="ttc" id="tcpip__headers_8hpp_xhtml"><div class="ttname"><a href="tcpip__headers_8hpp.xhtml">tcpip_headers.hpp</a></div><div class="ttdoc">Protocol headers. </div></div>
<div class="ttc" id="tcpip__headers_8hpp_xhtml_a8a613c50d4b87e140b5006e66872c476"><div class="ttname"><a href="tcpip__headers_8hpp.xhtml#a8a613c50d4b87e140b5006e66872c476">PROTO_UDPLITE</a></div><div class="ttdeci">#define PROTO_UDPLITE</div><div class="ttdoc">ID of UDPLite protocol. </div><div class="ttdef"><b>Definition:</b> <a href="tcpip__headers_8hpp_source.xhtml#l00153">tcpip_headers.hpp:153</a></div></div>
<div class="ttc" id="cache_8hpp_xhtml"><div class="ttname"><a href="cache_8hpp.xhtml">cache.hpp</a></div><div class="ttdoc">Cache implementation header file. </div></div>
<div class="ttc" id="tcpip__headers_8hpp_xhtml_a9ffdcf7d5e586cacd1d48afe7af9505f"><div class="ttname"><a href="tcpip__headers_8hpp.xhtml#a9ffdcf7d5e586cacd1d48afe7af9505f">PROTO_TCP</a></div><div class="ttdeci">#define PROTO_TCP</div><div class="ttdoc">ID of TCP protocol. </div><div class="ttdef"><b>Definition:</b> <a href="tcpip__headers_8hpp_source.xhtml#l00172">tcpip_headers.hpp:172</a></div></div>
<div class="ttc" id="struct_t_o_o_l_1_1mac__addr_xhtml_a300953da210b9b54c4b8dbc73d650f3f"><div class="ttname"><a href="struct_t_o_o_l_1_1mac__addr.xhtml#a300953da210b9b54c4b8dbc73d650f3f">TOOL::mac_addr::bytes</a></div><div class="ttdeci">unsigned char bytes[ETHER_ADDRLEN]</div><div class="ttdoc">Parts of MAC address. </div><div class="ttdef"><b>Definition:</b> <a href="tcpip__headers_8hpp_source.xhtml#l00041">tcpip_headers.hpp:41</a></div></div>
<div class="ttc" id="tcpip__headers_8hpp_xhtml_a180abd840f2fad8dfd4f33f7e8467b67"><div class="ttname"><a href="tcpip__headers_8hpp.xhtml#a180abd840f2fad8dfd4f33f7e8467b67">IPv6_ADDRLEN</a></div><div class="ttdeci">#define IPv6_ADDRLEN</div><div class="ttdoc">Length of IPv6 address. </div><div class="ttdef"><b>Definition:</b> <a href="tcpip__headers_8hpp_source.xhtml#l00105">tcpip_headers.hpp:105</a></div></div>
<div class="ttc" id="tcpip__headers_8hpp_xhtml_a811a9c0dd5d4b0f0bb5848e764d91017"><div class="ttname"><a href="tcpip__headers_8hpp.xhtml#a811a9c0dd5d4b0f0bb5848e764d91017">PROTO_UDP</a></div><div class="ttdeci">#define PROTO_UDP</div><div class="ttdoc">ID of UDP protocol. </div><div class="ttdef"><b>Definition:</b> <a href="tcpip__headers_8hpp_source.xhtml#l00152">tcpip_headers.hpp:152</a></div></div>
<div class="ttc" id="namespace_t_o_o_l_xhtml"><div class="ttname"><a href="namespace_t_o_o_l.xhtml">TOOL</a></div><div class="ttdef"><b>Definition:</b> <a href="cache_8cpp_source.xhtml#l00037">cache.cpp:37</a></div></div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="dir_68267d1309a1af8e8297ef4c3efbcdba.xhtml">src</a></li><li class="navelem"><a class="el" href="tool__linux_8cpp.xhtml">tool_linux.cpp</a></li>
    <li class="footer">Generated on Thu May 25 2017 17:05:08 for Network Traffic Capture With Application Tags by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.13 </li>
  </ul>
</div>
</body>
</html>
