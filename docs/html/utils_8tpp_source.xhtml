<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.13"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>Network Traffic Capture With Application Tags: src/utils.tpp Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/javascript">
  $(document).ready(function() { init_search(); });
</script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">Network Traffic Capture With Application Tags
   </div>
   <div id="projectbrief">Bachelor&#39;s Thesis, FIT VUT</div>
  </td>
   <td>        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.png" alt=""/></a>
          </span>
        </div>
</td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.13 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
$(document).ready(function(){initNavTree('utils_8tpp_source.xhtml','');});
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="headertitle">
<div class="title">utils.tpp</div>  </div>
</div><!--header-->
<div class="contents">
<a href="utils_8tpp.xhtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;/**</div><div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160; *  @file       utils.tpp</div><div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160; *  @brief      Small useful templated functions</div><div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160; *  @details    Credits: http://stackoverflow.com/questions/18892281/most-optimized-way-of-concatenation-in-strings</div><div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160; *  @author     Jozef Zuzelka &lt;xzuzel00@stud.fit.vutbr.cz&gt;</div><div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160; *  @date</div><div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160; *   - Created: 09.04.2017 01:58</div><div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160; *   - Edited:  09.04.2017 02:30</div><div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160; */</div><div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;</div><div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;template&lt;typename&gt;</div><div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;struct string_size_impl;</div><div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;</div><div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;template&lt;size_t N&gt;</div><div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;struct string_size_impl&lt;const char[N]&gt; {</div><div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;    static constexpr size_t size(const char (&amp;) [N]) { return N - 1; }</div><div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;};</div><div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;        </div><div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;template&lt;size_t N&gt;</div><div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;struct string_size_impl&lt;char[N]&gt; {</div><div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;    static size_t size(char (&amp;s) [N]) { return N ? strlen(s) : 0; }</div><div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;};</div><div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;</div><div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;template&lt;&gt;</div><div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;struct string_size_impl&lt;const char*&gt; {</div><div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;    static size_t size(const char* s) { return s ? strlen(s) : 0; }</div><div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;};</div><div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;</div><div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;template&lt;&gt;</div><div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;struct string_size_impl&lt;char*&gt; {</div><div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;    static size_t size(char* s) { return s ? strlen(s) : 0; }</div><div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;};</div><div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;</div><div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;template&lt;&gt;</div><div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;struct string_size_impl&lt;std::string&gt; {</div><div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;    static size_t size(const std::string&amp; s) { return s.size(); }</div><div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;};</div><div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;</div><div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;template&lt;typename String&gt; size_t string_size(String&amp;&amp; s) {</div><div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;    using noref_t = typename std::remove_reference&lt;String&gt;::type;</div><div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;    using string_t = typename std::conditional&lt;std::is_array&lt;noref_t&gt;::value,</div><div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;          noref_t,</div><div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;          typename std::remove_cv&lt;noref_t&gt;::type</div><div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;              &gt;::type;</div><div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;    return string_size_impl&lt;string_t&gt;::size(s);</div><div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;}</div><div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;</div><div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;</div><div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;template&lt;typename...&gt;</div><div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;struct concatenate_impl;</div><div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;</div><div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;template&lt;typename String&gt;</div><div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;struct concatenate_impl&lt;String&gt; {</div><div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;    static size_t size(String&amp;&amp; s) { return string_size(s); }</div><div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;    static void concatenate(std::string&amp; result, String&amp;&amp; s) { result += s; }</div><div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;};</div><div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;</div><div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;template&lt;typename String, typename... Rest&gt;</div><div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;struct concatenate_impl&lt;String, Rest...&gt; {</div><div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;    static size_t size(String&amp;&amp; s, Rest&amp;&amp;... rest) {</div><div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;        return string_size(s)</div><div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;            + concatenate_impl&lt;Rest...&gt;::size(std::forward&lt;Rest&gt;(rest)...);</div><div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;    }</div><div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;    static void concatenate(std::string&amp; result, String&amp;&amp; s, Rest&amp;&amp;... rest) {</div><div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;        result += s;</div><div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;        concatenate_impl&lt;Rest...&gt;::concatenate(result, std::forward&lt;Rest&gt;(rest)...);</div><div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;    }</div><div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;};</div><div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;</div><div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;</div><div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;template&lt;typename... Strings&gt;</div><div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;std::string concatenate(Strings&amp;&amp;... strings) {</div><div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;    std::string result;</div><div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;    result.reserve(concatenate_impl&lt;Strings...&gt;::size(std::forward&lt;Strings&gt;(strings)...));</div><div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;    concatenate_impl&lt;Strings...&gt;::concatenate(result, std::forward&lt;Strings&gt;(strings)...);</div><div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;    return result;</div><div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;}</div></div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="dir_68267d1309a1af8e8297ef4c3efbcdba.xhtml">src</a></li><li class="navelem"><a class="el" href="utils_8tpp.xhtml">utils.tpp</a></li>
    <li class="footer">Generated on Thu May 25 2017 17:05:08 for Network Traffic Capture With Application Tags by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.13 </li>
  </ul>
</div>
</body>
</html>
