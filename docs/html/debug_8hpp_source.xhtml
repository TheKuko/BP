<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.13"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>Network Traffic Capture With Application Tags: src/debug.hpp Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/javascript">
  $(document).ready(function() { init_search(); });
</script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">Network Traffic Capture With Application Tags
   </div>
   <div id="projectbrief">Bachelor&#39;s Thesis, FIT VUT</div>
  </td>
   <td>        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.png" alt=""/></a>
          </span>
        </div>
</td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.13 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
$(document).ready(function(){initNavTree('debug_8hpp_source.xhtml','');});
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="headertitle">
<div class="title">debug.hpp</div>  </div>
</div><!--header-->
<div class="contents">
<a href="debug_8hpp.xhtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;</div><div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;<span class="preprocessor">#pragma once</span></div><div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;</div><div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;<span class="preprocessor">#include &lt;iostream&gt;</span>     <span class="comment">//  cerr, uint8_t</span></div><div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;<span class="preprocessor">#include &lt;mutex&gt;</span>        <span class="comment">//  mutex</span></div><div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;</div><div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;</div><div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;</div><div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;</div><div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;<span class="keyword">namespace </span><a class="code" href="namespace_t_o_o_l.xhtml">TOOL</a></div><div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;{</div><div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;</div><div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;</div><div class="line"><a name="l00022"></a><span class="lineno"><a class="line" href="debug_8hpp.xhtml#a7ef10ef4f3d493a4fa398cbfcb525495">   22</a></span>&#160;<span class="preprocessor">#define CLR  &quot;\x1B[0m&quot;  </span></div><div class="line"><a name="l00023"></a><span class="lineno"><a class="line" href="debug_8hpp.xhtml#a8d23feea868a983c8c2b661e1e16972f">   23</a></span>&#160;<span class="preprocessor">#define RED  &quot;\x1B[31m&quot; </span></div><div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;<span class="preprocessor"></span></div><div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;</div><div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;<span class="keyword">extern</span> std::mutex m_debugPrint;</div><div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;</div><div class="line"><a name="l00032"></a><span class="lineno"><a class="line" href="debug_8hpp.xhtml#a329cdf7e578aab560574ffb3bfe94d31">   32</a></span>&#160;<span class="keyword">enum class</span> <a class="code" href="debug_8hpp.xhtml#a329cdf7e578aab560574ffb3bfe94d31">LogLevel</a> : uint8_t</div><div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;{</div><div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;    NONE     = 0,   </div><div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;    ERR      = 1,   </div><div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;    WARNING  = 2,   </div><div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;    INFO     = 3,   </div><div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;};</div><div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;</div><div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;<span class="keyword">extern</span> <a class="code" href="debug_8hpp.xhtml#a329cdf7e578aab560574ffb3bfe94d31">LogLevel</a> <a class="code" href="debug_8cpp.xhtml#aa6816f0a5539a5fd9f3029bdc8de295c">generalLogLevel</a>;</div><div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;</div><div class="line"><a name="l00043"></a><span class="lineno"><a class="line" href="debug_8hpp.xhtml#aadd1e93923d2b7ade409bf44aba52cad">   43</a></span>&#160;<span class="keyword">const</span> <span class="keywordtype">char</span> * <span class="keyword">const</span> <a class="code" href="debug_8hpp.xhtml#aadd1e93923d2b7ade409bf44aba52cad">msgPrefix</a>[] = { <span class="stringliteral">&quot;&quot;</span>, <span class="stringliteral">&quot;[EE]&quot;</span>, <span class="stringliteral">&quot;[WW]&quot;</span>, <span class="stringliteral">&quot;[II]&quot;</span>};</div><div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;</div><div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;</div><div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;</div><div class="line"><a name="l00052"></a><span class="lineno"><a class="line" href="debug_8hpp.xhtml#a0f65c1d9e155878cdc8819ff8953bec6">   52</a></span>&#160;<span class="keyword">inline</span> <span class="keywordtype">void</span> <a class="code" href="debug_8hpp.xhtml#a0f65c1d9e155878cdc8819ff8953bec6">printArray</a>(<span class="keyword">const</span> <span class="keywordtype">unsigned</span> <span class="keywordtype">char</span> *bitArray, <span class="keyword">const</span> <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> dataSize)</div><div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;{</div><div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;    std::lock_guard&lt;std::mutex&gt; guard(m_debugPrint);</div><div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;    std::cerr &lt;&lt; <span class="stringliteral">&quot;Data (&quot;</span> &lt;&lt; dataSize &lt;&lt; <span class="stringliteral">&quot;): &quot;</span>;</div><div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;    <span class="keywordflow">for</span> (<span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> i=0; i != dataSize; i++)</div><div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;        std::cerr &lt;&lt; std::hex &lt;&lt; (bitArray[i]&gt;&gt;4) &lt;&lt; (bitArray[i]&amp;0x0f) &lt;&lt; std::dec;</div><div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;    std::cerr &lt;&lt; std::endl;</div><div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;}</div><div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;</div><div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;<span class="comment">//#define log(x, ...)</span></div><div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;</div><div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> ... Ts&gt;</div><div class="line"><a name="l00070"></a><span class="lineno"><a class="line" href="debug_8hpp.xhtml#a9340c95e0607709d793dc427c8b630e8">   70</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="debug_8hpp.xhtml#a9340c95e0607709d793dc427c8b630e8">log</a>(<a class="code" href="debug_8hpp.xhtml#a329cdf7e578aab560574ffb3bfe94d31">LogLevel</a> ll, Ts&amp;&amp;... args)</div><div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;{</div><div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;    <span class="keywordflow">if</span> (ll &lt;= generalLogLevel)</div><div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;    {</div><div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;        std::lock_guard&lt;std::mutex&gt; guard(m_debugPrint);</div><div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;        std::cerr &lt;&lt; msgPrefix[static_cast&lt;int&gt;(ll)] &lt;&lt; <span class="stringliteral">&quot; &quot;</span>;</div><div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;        <span class="comment">//(std::cerr &lt;&lt; ... &lt;&lt; args) &lt;&lt; std::endl;  // c++17</span></div><div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;        <span class="keywordtype">int</span> dummy[<span class="keyword">sizeof</span>...(Ts)] = { (std::cerr &lt;&lt; args, 0)... };</div><div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;        (void)dummy;    <span class="comment">// disable warning about unused var</span></div><div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;        std::cerr &lt;&lt; std::endl;</div><div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;    }</div><div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;}</div><div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;</div><div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;<span class="keywordtype">void</span> <a class="code" href="debug_8cpp.xhtml#ad6ba0645e5c2cdd3f7533aa4f15dbe71">setLogLevel</a>(<span class="keywordtype">char</span> *ll);</div><div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;</div><div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;</div><div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;}   <span class="comment">// namespace TOOL</span></div><div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;</div><div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;</div><div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;</div><div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;</div><div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;<span class="preprocessor">#ifdef DEBUG_BUILD</span></div><div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;</div><div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;<span class="preprocessor">#define D_ARRAY(bitArray, dataSize) printArray(bitArray, dataSize)</span></div><div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;</div><div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;<span class="preprocessor">#define D(...) \</span></div><div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;<span class="preprocessor">do { \</span></div><div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;<span class="preprocessor">    std::lock_guard&lt;std::mutex&gt; guard(m_debugPrint); \</span></div><div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;<span class="preprocessor">    std::cerr &lt;&lt; &quot;DEBUG: &quot; &lt;&lt; __FILE__ &lt;&lt; &quot;:&quot; &lt;&lt; __LINE__ &lt;&lt; &quot;:&lt;&quot; &lt;&lt; RED &lt;&lt; __func__ &lt;&lt;  CLR &lt;&lt; &quot;&gt;: &quot;; \</span></div><div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;<span class="preprocessor">    std::cerr &lt;&lt; __VA_ARGS__ &lt;&lt; std::endl; \</span></div><div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;<span class="preprocessor">} while (0)</span></div><div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;</div><div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;<span class="preprocessor">#else   //  DEBUG_BUILD</span></div><div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;</div><div class="line"><a name="l00121"></a><span class="lineno"><a class="line" href="debug_8hpp.xhtml#a887f9c58a59831ccccb32a4354ee80d3">  121</a></span>&#160;<span class="preprocessor">#define D_ARRAY(x,y)    </span></div><div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;</div><div class="line"><a name="l00125"></a><span class="lineno"><a class="line" href="debug_8hpp.xhtml#a74021f021dcdfbb22891787b79c5529d">  125</a></span>&#160;<span class="preprocessor">#define D(...)</span></div><div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;</div><div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;<span class="preprocessor">#endif  // DEBUG_BUILD</span></div><div class="ttc" id="debug_8cpp_xhtml_aa6816f0a5539a5fd9f3029bdc8de295c"><div class="ttname"><a href="debug_8cpp.xhtml#aa6816f0a5539a5fd9f3029bdc8de295c">TOOL::generalLogLevel</a></div><div class="ttdeci">LogLevel generalLogLevel</div><div class="ttdoc">General log level. </div><div class="ttdef"><b>Definition:</b> <a href="debug_8cpp_source.xhtml#l00020">debug.cpp:20</a></div></div>
<div class="ttc" id="debug_8hpp_xhtml_a9340c95e0607709d793dc427c8b630e8"><div class="ttname"><a href="debug_8hpp.xhtml#a9340c95e0607709d793dc427c8b630e8">TOOL::log</a></div><div class="ttdeci">void log(LogLevel ll, Ts &amp;&amp;... args)</div><div class="ttdoc">Function that prints log messages. </div><div class="ttdef"><b>Definition:</b> <a href="debug_8hpp_source.xhtml#l00070">debug.hpp:70</a></div></div>
<div class="ttc" id="debug_8cpp_xhtml_ad6ba0645e5c2cdd3f7533aa4f15dbe71"><div class="ttname"><a href="debug_8cpp.xhtml#ad6ba0645e5c2cdd3f7533aa4f15dbe71">TOOL::setLogLevel</a></div><div class="ttdeci">void setLogLevel(char *ll)</div><div class="ttdoc">Sets #TOOL::generalLogLevel;. </div><div class="ttdef"><b>Definition:</b> <a href="debug_8cpp_source.xhtml#l00022">debug.cpp:22</a></div></div>
<div class="ttc" id="debug_8hpp_xhtml_aadd1e93923d2b7ade409bf44aba52cad"><div class="ttname"><a href="debug_8hpp.xhtml#aadd1e93923d2b7ade409bf44aba52cad">TOOL::msgPrefix</a></div><div class="ttdeci">const char *const msgPrefix[]</div><div class="ttdoc">Array of prefixes of debug messages. </div><div class="ttdef"><b>Definition:</b> <a href="debug_8hpp_source.xhtml#l00043">debug.hpp:43</a></div></div>
<div class="ttc" id="debug_8hpp_xhtml_a0f65c1d9e155878cdc8819ff8953bec6"><div class="ttname"><a href="debug_8hpp.xhtml#a0f65c1d9e155878cdc8819ff8953bec6">TOOL::printArray</a></div><div class="ttdeci">void printArray(const unsigned char *bitArray, const unsigned int dataSize)</div><div class="ttdoc">Function prints array in hexadecimal. </div><div class="ttdef"><b>Definition:</b> <a href="debug_8hpp_source.xhtml#l00052">debug.hpp:52</a></div></div>
<div class="ttc" id="debug_8hpp_xhtml_a329cdf7e578aab560574ffb3bfe94d31"><div class="ttname"><a href="debug_8hpp.xhtml#a329cdf7e578aab560574ffb3bfe94d31">TOOL::LogLevel</a></div><div class="ttdeci">LogLevel</div><div class="ttdoc">An enum representing debug prints verbosity. </div><div class="ttdef"><b>Definition:</b> <a href="debug_8hpp_source.xhtml#l00032">debug.hpp:32</a></div></div>
<div class="ttc" id="namespace_t_o_o_l_xhtml"><div class="ttname"><a href="namespace_t_o_o_l.xhtml">TOOL</a></div><div class="ttdef"><b>Definition:</b> <a href="cache_8cpp_source.xhtml#l00037">cache.cpp:37</a></div></div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="dir_68267d1309a1af8e8297ef4c3efbcdba.xhtml">src</a></li><li class="navelem"><a class="el" href="debug_8hpp.xhtml">debug.hpp</a></li>
    <li class="footer">Generated on Thu May 25 2017 17:05:08 for Network Traffic Capture With Application Tags by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.13 </li>
  </ul>
</div>
</body>
</html>
